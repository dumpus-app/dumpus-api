services:
  broker:
    container_name: dumpus-broker
    image: rabbitmq:latest
    ports:
      - "${RABBITMQ_PORT}:5672"

    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "--quiet", "ping"]
      timeout: 10s
      retries: 5
      start_period: 10s

    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}

    restart: on-failure

  db:
    container_name: dumpus-db
    image: postgres:latest
    ports:
      - "${POSTGRES_PORT}:5432"

    healthcheck:
      test: ["CMD-SHELL", "PGUSER=dumpus", "pg_isready"]
      interval: 5s
      timeout: 10s
      retries: 5

    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_DB: ${POSTGRES_DB}

    restart: on-failure
    volumes:
      - postgres-data:/var/lib/postgresql/data

  worker:
    container_name: dumpus-worker
    build:
      dockerfile: Dockerfile.worker

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "celery -A tasks inspect ping -d regular_process@$$HOSTNAME",
        ]
      interval: 2s
      timeout: 10s
      retries: 5

    depends_on:
      broker:
        condition: service_healthy
        restart: true
      db:
        condition: service_healthy
        restart: true

    environment:
      POSTGRES_URL: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/dumpus"
      RABBITMQ_URL: "amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@broker:5672/"
      CELERY_HOSTNAME: "${CELERY_HOSTNAME}"
      CELERY_QUEUE: "${CELERY_QUEUE}"

  api:
    container_name: dumpus-api
    build:
      dockerfile: Dockerfile.api

    ports:
      - "${API_PORT}:5000"
    depends_on:
      worker:
        condition: service_healthy
        restart: true

    environment:
      POSTGRES_URL: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASS}@db:5432/dumpus"
      RABBITMQ_URL: "amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@broker:5672/"

  # flower:
  #   container_name: flower
  #   build:
  #     dockerfile: Dockerfile.flower

  #   ports:
  #     - "5566:5566"

  #   depends_on:
  #     worker:
  #       condition: service_healthy
  #       restart: true

volumes:
  postgres-data:
